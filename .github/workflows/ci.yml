name: 🛠️ CI Pipeline

on:
  push:
    branches:
      - dev
  workflow_dispatch: # 🖱️ 手動觸發

jobs:
  ci:
    runs-on: ubuntu-vm-ci # ci
    steps:
      # 🔍 檢查程式碼，拉取最新的程式碼
      - name: 📥 Checkout code
        uses: actions/checkout@v2
      
      # 🌍 環境變數設定
      - name: 🌱 Set Environment Variables
        run: |
          echo "Setting environment variables..."
          cp docker-compose/.env.example docker-compose/.env
          echo -e "\nOLLAMA_API_URL=http://${{ secrets.OLLAMA_SERVICE_IP_PORT }}" >> ./fastapi/.env
      
      # 🏗️ 建置應用程式鏡像
      - name: 🛠️ Build Application
        run: |
          echo "Building Docker Image..."
          docker-compose -f docker-compose-server.yml build --no-cache --pull
      
      # ▶️ 啟動容器群，等待 5 秒確保啟動完成
      - name: 🚀 Start Application
        run: |
          echo "Starting Docker Containers..."
          docker-compose -f docker-compose-server.yml up -d
          sleep 5
      
      # ✅ 執行測試
      - name: 🧪 Run Tests
        run: |
          echo "Running Tests..."
          docker exec ai_server_sample_fastapi bash -c "source /venv/.venv/bin/activate && pytest -s"
          echo "Tests completed!"
      
      # ⏹️ 停止容器群
      - name: 🛑 Clear Application
        if: always()
        run: |
          docker-compose -f docker-compose-server.yml down
      
      # 🧹 清理 Docker 資源
      - name: 🧹 Clean up Docker
        if: always()
        run: |
          docker buildx prune --all --force
          docker system prune -af
          docker volume prune -f